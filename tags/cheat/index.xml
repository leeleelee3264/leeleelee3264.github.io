<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Cheat on dev_leelee.log</title>
    <link>https://leeleelee3264.github.io/tags/cheat/</link>
    <description>Recent content in Cheat on dev_leelee.log</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en</language>
    <lastBuildDate>Sat, 30 Jan 2021 00:00:00 +0000</lastBuildDate><atom:link href="https://leeleelee3264.github.io/tags/cheat/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>(en) Docker Cheat Sheet</title>
      <link>https://leeleelee3264.github.io/post/2021-01-30-docker-cheet-sheet/</link>
      <pubDate>Sat, 30 Jan 2021 00:00:00 +0000</pubDate>
      
      <guid>https://leeleelee3264.github.io/post/2021-01-30-docker-cheet-sheet/</guid>
      <description>Docker Cheat Sheet에 대해서 다룬다. Index DockerFile Cheat Sheet Docker Command Cheat Sheet Dockerfile Cheat Sheet I have to make image before running docker container with the image. How to get images I need? I can just pull images from my/someone else&amp;rsquo;s docker hub repository or I can even make one all by myself. Do this, I must write Dockerfile. Dockerfile is just like a recipe for building images. [Picture 1] DockerFile Cheat Sheet Docker Command Cheat Sheet Docker is working like linux. It&amp;rsquo;s tiny which contains minimum setting to</description>
    </item>
    
    <item>
      <title>(en) Java Regex Cheat Sheet</title>
      <link>https://leeleelee3264.github.io/post/2021-01-11-java-regex-cheat-sheet/</link>
      <pubDate>Mon, 11 Jan 2021 00:00:00 +0000</pubDate>
      
      <guid>https://leeleelee3264.github.io/post/2021-01-11-java-regex-cheat-sheet/</guid>
      <description>Java Regex Cheat Sheet에 대해서 다룬다. Index Change plain text to Korean Phone Number format Extracting SubString Change plain text to Korean Phone Number format 1 2 3 4 5 6 7 8 public static void testNumber(String src) { Pattern SRC_PHONE_FORMAT = Pattern.compile(&amp;#34;(\\d{3})(\\d{4})(\\d{4})&amp;#34;); Pattern DEST_PHONE_FORMAT = Pattern.compile(&amp;#34;$1-$2-$3&amp;#34;); String dest = src.replaceFirst(SRC_PHONE_FORMAT.toString(), DEST_PHONE_FORMAT.toString()); System.out.println(dest); } 맨처음에는 패턴들에 통째로 replaceAll을 걸었는데 그럼 결과가 그냥 DE</description>
    </item>
    
  </channel>
</rss>
